jaeger:
  allInOne:
    resources:
      requests:
        memory: 2200Mi
      limits:
        memory: 2200Mi

components:
  flagd:
    resources:
      limits:
        memory: 150Mi
  productCatalogService:
    resources:
      limits:
        memory: 150Mi

prometheus:
  server:
    extraArgs:
      web.enable-lifecycle: ""
    persistentVolume:
      enabled: true
      storageClass: "openebs-hostpath"
      accessModes:
        - ReadWriteOnce
      size: 8Gi
        
  #prometheus-node-exporter:
  #  enabled: true
  #  podAnnotations:
  #    prometheus.io/scrape: "true"
  #    prometheus.io/port: "9100"
  #    opentelemetry_community_demo: "true"
  #kube-state-metrics: 
  #  enabled: true
  #  podAnnotations:
  #    prometheus.io/scrape: "true"
  #    prometheus.io/port: "8080"
  #    opentelemetry_community_demo: "true"
  #server:
  #  global:
  #    scrape_interval: 5s
  #serverFiles:
  #  prometheus.yml:
  #    scrape_configs:
  #      - job_name: 'kubernetes-pods'
  #        kubernetes_sd_configs:
  #          - role: pod
  #        relabel_configs:
  #          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
  #            action: keep
  #            regex: true
  #      - job_name: 'otel-collector'
  #        honor_labels: true
  #        kubernetes_sd_configs:
  #          - role: pod
  #            namespaces:
  #              own_namespace: true
  #        relabel_configs:
  #          - source_labels: [__meta_kubernetes_pod_annotation_opentelemetry_community_demo]
  #            action: keep
  #            regex: true
  #      - job_name: 'kubernetes-service-endpoints'
  #        scrape_interval: 5s
  #        scrape_timeout: 2s
  #        kubernetes_sd_configs:
  #          - role: service
  #        relabel_configs:
  #          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
  #            action: keep
  #            regex: true
  #          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
  #            action: replace
  #            target_label: __scheme__
  #            regex: (https?)
  #          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
  #            action: replace
  #            target_label: __metrics_path__
  #            regex: (.+)
  #          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
  #            action: replace
  #            target_label: __address__
  #            regex: (.+)(?::\d+);(\d+)
  #            replacement: $1:$2
  #          - action: labelmap
  #            regex: __meta_kubernetes_service_label_(.+)
  #          - source_labels: [__meta_kubernetes_namespace]
  #            action: replace
  #            target_label: kubernetes_namespace
  #          - source_labels: [__meta_kubernetes_service_name]
  #            action: replace
  #            target_label: kubernetes_name
  #          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
  #            action: replace
  #            target_label: __scheme__
  #            regex: (.+)