grafana:
  adminPassword: admin

kube-state-metrics:
  metricLabelsAllowlist:
    - namespaces=[*]
    - pods=[*]
  metricAnnotationsAllowList:
    - pods=[*]
    - namespaces=[*]

prometheus:
  prometheusSpec:
    additionalScrapeConfigs:
      - job_name: 'istio-envoy-sidecars'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: '.*-envoy-prom' # matches port name like "http-envoy-prom"
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: 'true'
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: (.+):(?:\d+);(\d+)
            replacement: $1:$2
            target_label: __address__

      - job_name: 'istiod'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_namespace]
            action: keep
            regex: istiod;istio-system
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http-monitoring

      - job_name: 'istio-ingressgateway'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_namespace]
            action: keep
            regex: istio-ingressgateway;istio-ingress
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http-envoy-prom
